/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing18thdec_stage.newtestdbpostgres;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Future;
import javax.validation.constraints.Past;

 
import java.time.LocalDateTime;

/**
 * DatetimeTabaleReverse generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`DATETIME_TABALE_REVERSE`")
public class DatetimeTabaleReverse implements Serializable {

    private String id;
@Future()
    private Timestamp datetimeTimestamp;
     
@Past()
    private LocalDateTime timestampDatetime;

    @Id
    @Column(name = "`ID`", nullable = false, length = 255)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Column(name = "`DATETIME_TIMESTAMP`", nullable = true, updatable = false)
    public Timestamp getDatetimeTimestamp() {
        return this.datetimeTimestamp;
    }

    public void setDatetimeTimestamp(Timestamp datetimeTimestamp) {
        this.datetimeTimestamp = datetimeTimestamp;
    }

    @Column(name = "`TIMESTAMP_DATETIME`", nullable = true, updatable = false)
    public LocalDateTime getTimestampDatetime() {
        return this.timestampDatetime;
    }

    public void setTimestampDatetime(LocalDateTime timestampDatetime) {
        this.timestampDatetime = timestampDatetime;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DatetimeTabaleReverse)) return false;
        final DatetimeTabaleReverse datetimeTabaleReverse = (DatetimeTabaleReverse) o;
        return Objects.equals(getId(), datetimeTabaleReverse.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

