/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing18thdec_stage.newtestdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

 
import java.time.LocalDateTime;

/**
 * One2oneParent generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`One2One_Parent`")
public class One2oneParent implements Serializable {

    private Short shortPkId;
    private Date dateCol;
    private Time timeCol;
     
    private LocalDateTime datetimeCol;
    private Timestamp timestampCol;
    private String charCol;
    private One2oneChild one2oneChild;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`SHORT PK ID`", nullable = false, scale = 0, precision = 5)
    public Short getShortPkId() {
        return this.shortPkId;
    }

    public void setShortPkId(Short shortPkId) {
        this.shortPkId = shortPkId;
    }

    @Column(name = "`DATE COL`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Column(name = "`TIME COL`", nullable = true)
    public Time getTimeCol() {
        return this.timeCol;
    }

    public void setTimeCol(Time timeCol) {
        this.timeCol = timeCol;
    }

    @Column(name = "`DATETIME COL`", nullable = true)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    @Column(name = "`TIMESTAMP COL`", nullable = true)
    public Timestamp getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(Timestamp timestampCol) {
        this.timestampCol = timestampCol;
    }

    @Column(name = "`CHAR COL`", nullable = true, length = 1)
    public String getCharCol() {
        return this.charCol;
    }

    public void setCharCol(String charCol) {
        this.charCol = charCol;
    }

    @OneToOne(fetch = FetchType.EAGER, mappedBy = "one2oneParent")
    public One2oneChild getOne2oneChild() {
        return this.one2oneChild;
    }

    public void setOne2oneChild(One2oneChild one2oneChild) {
        this.one2oneChild = one2oneChild;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof One2oneParent)) return false;
        final One2oneParent one2oneParent = (One2oneParent) o;
        return Objects.equals(getShortPkId(), one2oneParent.getShortPkId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getShortPkId());
    }
}

