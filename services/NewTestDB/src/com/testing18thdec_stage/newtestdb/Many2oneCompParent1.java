/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing18thdec_stage.newtestdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Many2oneCompParent1 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Many2One_Comp_Parent1`")
@IdClass(Many2oneCompParent1Id.class)
public class Many2oneCompParent1 implements Serializable {

    private Long bigintPk;
    private String stringPk;
    private Boolean booleanPk;
    private String charPk;
    private Date dateCol;
    private List<Many2oneCompChild1> many2oneCompChild1s;

    @Id
    @Column(name = "`BIGINT PK`", nullable = false, scale = 0, precision = 19)
    public Long getBigintPk() {
        return this.bigintPk;
    }

    public void setBigintPk(Long bigintPk) {
        this.bigintPk = bigintPk;
    }

    @Id
    @Column(name = "`STRING PK`", nullable = false, length = 255)
    public String getStringPk() {
        return this.stringPk;
    }

    public void setStringPk(String stringPk) {
        this.stringPk = stringPk;
    }

    @Id
    @Column(name = "`BOOLEAN PK`", nullable = false)
    public Boolean getBooleanPk() {
        return this.booleanPk;
    }

    public void setBooleanPk(Boolean booleanPk) {
        this.booleanPk = booleanPk;
    }

    @Id
    @Column(name = "`CHAR PK`", nullable = false, length = 1)
    public String getCharPk() {
        return this.charPk;
    }

    public void setCharPk(String charPk) {
        this.charPk = charPk;
    }

    @Column(name = "`DATE COL`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "many2oneCompParent1")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<Many2oneCompChild1> getMany2oneCompChild1s() {
        return this.many2oneCompChild1s;
    }

    public void setMany2oneCompChild1s(List<Many2oneCompChild1> many2oneCompChild1s) {
        this.many2oneCompChild1s = many2oneCompChild1s;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Many2oneCompParent1)) return false;
        final Many2oneCompParent1 many2oneCompParent1 = (Many2oneCompParent1) o;
        return Objects.equals(getBigintPk(), many2oneCompParent1.getBigintPk()) &&
                Objects.equals(getStringPk(), many2oneCompParent1.getStringPk()) &&
                Objects.equals(getBooleanPk(), many2oneCompParent1.getBooleanPk()) &&
                Objects.equals(getCharPk(), many2oneCompParent1.getCharPk());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getBigintPk(),
                getStringPk(),
                getBooleanPk(),
                getCharPk());
    }
}